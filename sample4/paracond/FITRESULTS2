/home/saila/Desktop/APL/py3_venv/bin/python3.5 /home/saila/Desktop/APL/HTC/DataAnalysis/sample4/odr_fit_to_data.py
***********************************************************
               ORTHOGONAL DISTANCE REGRESSION
Python 3.5.2 (default, Nov 17 2016, 17:05:23) 
[GCC 5.4.0 20160609]
Scipy:0.19.1, Numpy:1.13.1, Matplotlib:2.0.2
***********************************************************

ODR algorithm stop reason: Sum of squares convergence

Fit 7968 Data points from file: diffDatawError.txt
To Model :
  def HTC(p, x) :
    #Tc                             : p[0]
    #alpha                          : p[1]
    return 1/((x - p[0])**(p[1]))

Estimated parameters and uncertainties
   p[0] =     84.469 +/-    0.12705          (Starting guess:         77)
   p[1] =     1.1905 +/-  0.0047492          (Starting guess:        1.1)

Standard Covariance Matrix : 
 [[  1.61414238e-02   5.66399874e-04]
 [  5.66399874e-04   2.25550642e-05]] 


Correlation Matrix :
 1       0.939  
 0.939   1      

Quasi Chi-Squared/dof   =    0.02258, Chi-Squared CDF =  100.00000%
   WARNING:Above CDF is not valid for large x uncertainties!

To use Monte Carlo simulation to more accurately estimate
       CDF for large x uncertainties, re-run program with 
     "Run_Monte_Carlo_CDF_Estimator = True" and
     "Number_of_MC_iterations >= 1000." This may take some time

Run_Monte_Carlo_CDF_Estimator = True

**** Running Monte Carlo CDF Estimator ****
Number_of_MC_iterations = 11 simulations in 1.0046979999999999 seconds.

Fraction of quasi-chisquared values larger than observed value:
    Monte Carlo CDF =  100.0%
    Minimum, Mean, and Maximum Quasi Chi-Squared values:  0.98      1      1

Average and Standard Deviation of MC Fit parameters
[array([ 84.68971963,   1.19798654]), array([ 84.34507577,   1.18782084]), array([ 84.33919166,   1.18647287]), array([ 84.47311756,   1.19107959]), array([ 84.40331037,   1.18799316]), array([ 84.45628807,   1.19088487]), array([ 84.50182464,   1.18801393]), array([ 84.69059797,   1.19872054]), array([ 84.48051563,   1.19078172]), array([ 84.44885088,   1.18944186]), array([ 84.20811474,   1.18364861])]
   p[0] =      84.4579 +/-     0.135794 ; (Min =    84.208115, Max =    84.690598
   p[1] =      1.19026 +/-   0.00434291 ; (Min =     1.183649, Max =     1.198721

Check for any Fit Biases in MC Fit parameters(Significance and ratio)
   p[0] = -0.27    (0.9998634   +/-0.0005083703)
   p[1] = -0.17    (0.999808    +/-0.001153602 )

