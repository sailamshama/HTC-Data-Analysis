/home/saila/Desktop/APL/py3_venv/bin/python3.5 /home/saila/Desktop/APL/HTC/DataAnalysis/sample2/paracond/odr_fit_to_data.py
/home/saila/Desktop/APL/HTC/DataAnalysis/sample2/paracond/odr_fit_to_data.py:116: RuntimeWarning: invalid value encountered in power
  return 1/((x - p[0])**(p[1]))
***********************************************************
               ORTHOGONAL DISTANCE REGRESSION
Python 3.5.2 (default, Nov 17 2016, 17:05:23) 
[GCC 5.4.0 20160609]
Scipy:0.19.1, Numpy:1.13.1, Matplotlib:2.0.2
***********************************************************

ODR algorithm stop reason: Sum of squares convergence

Fit 372 Data points from file: diffDatawError.txt
To Model :
  def HTC(p, x) :
    #Tc                             : p[0]
    #alpha                          : p[1]
    return 1/((x - p[0])**(p[1]))

Estimated parameters and uncertainties
   p[0] =     128.02 +/-      0.493          (Starting guess:         92)
   p[1] =     3.7229 +/-    0.43571          (Starting guess:        1.1)

Standard Covariance Matrix : 
 [[ 0.24304453  0.20814959]
 [ 0.20814959  0.18984671]] 


Correlation Matrix :
 1       0.969  
 0.969   1      

Quasi Chi-Squared/dof   =    0.01480, Chi-Squared CDF =  100.00000%
   WARNING:Above CDF is not valid for large x uncertainties!

To use Monte Carlo simulation to more accurately estimate
       CDF for large x uncertainties, re-run program with 
     "Run_Monte_Carlo_CDF_Estimator = True" and
     "Number_of_MC_iterations >= 1000." This may take some time

Run_Monte_Carlo_CDF_Estimator = True

**** Running Monte Carlo CDF Estimator ****
Number_of_MC_iterations = 11 simulations in 0.10642200000000002 seconds.

Fraction of quasi-chisquared values larger than observed value:
    Monte Carlo CDF =  100.0%
    Minimum, Mean, and Maximum Quasi Chi-Squared values:  0.85      1    1.2

Average and Standard Deviation of MC Fit parameters
[array([ 128.22847304,    3.81667978]), array([ 128.34633857,    3.84350897]), array([ 128.79197918,    4.59715165]), array([ 128.31469699,    4.03377741]), array([ 128.47626801,    4.1442149 ]), array([ 128.18680486,    3.888659  ]), array([ 127.57201562,    3.5843305 ]), array([ 127.76372226,    3.45819181]), array([ 127.73271389,    3.28044535]), array([ 128.00635018,    3.67005584]), array([ 128.20008523,    3.98306192])]
   p[0] =      128.147 +/-     0.340085 ; (Min =   127.572016, Max =   128.791979
   p[1] =      3.84546 +/-     0.341063 ; (Min =     3.280445, Max =     4.597152

Check for any Fit Biases in MC Fit parameters(Significance and ratio)
   p[0] =  1.16    (1.000977    +/-0.0008400452)
   p[1] =  1.14    (1.032907    +/-0.02896994  )

